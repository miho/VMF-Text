import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenLocal()
    }

    dependencies {
        classpath 'eu.mihosoft.vmf:vmf-text-gradle-plugin:0.2-SNAPSHOT'
        //classpath fileTree(dir: '../gradle-plugin/build/libs/', include: '*.jar')
    }
}

plugins {
    // id 'eu.mihosoft.vmftext' version '0.1.2'
    id 'com.github.hierynomus.license' version '0.14.0'
    id 'net.nemerosa.versioning' version '2.4.0'
    id 'com.github.ben-manes.versions' version '0.13.0'
}

wrapper {
    gradleVersion = '6.0'

    // def jvmOpts = "-Xmx2048m -XX:+CMSClassUnloadingEnabled"
    // inputs.property("jvmOpts", jvmOpts)
    // doLast {
    //     def optsEnvVar = "DEFAULT_JVM_OPTS"
    //     scriptFile.write scriptFile.text.replace("$optsEnvVar=\"\"", "$optsEnvVar=\"$jvmOpts\"")
    //     batchScript.write batchScript.text.replace("set $optsEnvVar=", "set $optsEnvVar=$jvmOpts")
    // }
}

apply plugin: 'java'
apply plugin: 'eu.mihosoft.vmftext'

sourceCompatibility = '11'
targetCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.fork = true
[compileJava, compileTestJava]*.options*.forkOptions*.memoryMaximumSize = '4g'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.vmftext.tutorial.Main'
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mdkt.compiler', name: 'InMemoryJavaCompiler', version: '1.3.0'
    testCompile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.12'

    testCompile group: 'eu.mihosoft.vtcc', name: 'vtcc', version: '2018.2.3'
    testCompile group: 'eu.mihosoft.vtcc.tccdist', name: 'tcc-dist', version: '2018.2.3'

    compile 'commons-jxpath:commons-jxpath:1.3'
}

// vmfText {
//     version    = "0.1.1"
//     vmfVersion = "0.1"
// }

test {
    forkEvery = 1; workingDir = { projectDir }

    // set heap size for the test JVM(s)
    //minHeapSize = "512m"
    //maxHeapSize = "2048m"

    // set JVM arguments for the test JVM(s)
    //jvmArgs '-XX:MaxPermSize=256m'
}

// -------------------------------

license {

    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true

    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }

    ext.yearCurrent  = new SimpleDateFormat("yyyy").format(new Date())
    ext.yearSince1   = '2017'
    ext.author1 = 'Michael Hoffer <info@michaelhoffer.de>'
    ext.yearSince2   = '2017'
    ext.author2 = 'Goethe Center for Scientific Computing, University Frankfurt'

    exclude '**/*.svg'

    exclude "$buildDir"

}